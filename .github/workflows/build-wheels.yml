name: Build Wheels

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: "*-musllinux_*"
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_ARCHS_LINUX: auto64
        CIBW_ARCHS_WINDOWS: auto64
        CIBW_BEFORE_BUILD: pip install numpy pybind11
        CIBW_TEST_REQUIRES: pytest numpy
        CIBW_TEST_COMMAND: python {project}/python/test_import.py
    
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Build sdist
      run: pipx run build --sdist
    
    - uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist
    
    - uses: actions/download-artifact@v3
      with:
        name: sdist
        path: dist
    
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
